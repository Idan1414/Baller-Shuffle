version: '3.8'

services:
  db:
    build:
      dockerfile: database/Dockerfile
    container_name: mysql_db
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: ballershuffleschema
      MYSQL_USER: IdanSQL
      MYSQL_PASSWORD: Idan27091999!
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - app_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      dockerfile: server/Dockerfile
    container_name: express_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: IdanSQL
      DB_PASSWORD: Idan27091999!
      DB_NAME: ballershuffleschema
      CORS_ORIGIN: "http://localhost:3000"

    # volumes:
    #   - ./server:/usr/src/app
    #   - /usr/src/app/node_modules
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      dockerfile: client/Dockerfile
      context: .
    container_name: react_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000
      - WDS_SOCKET_PORT=0
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app_network
    depends_on:
      - backend

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
